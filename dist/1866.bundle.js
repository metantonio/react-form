"use strict";(self.webpackChunkreact_hello_webapp=self.webpackChunkreact_hello_webapp||[]).push([[1866],{72914:(t,r,e)=>{e.d(r,{D:()=>f,F:()=>d,I:()=>o,a:()=>c,b:()=>u,c:()=>l,f:()=>p,g:()=>h,u:()=>g});var a=e(75640),i=e(5716),n=e(74054),s=e(20787);const o=(()=>i.arrayify("0x80ac58cd"))(),c=(()=>i.arrayify("0xd9b67a26"))(),d={name:"Failed to load NFT metadata"};async function p(t,r,e){if(r.startsWith("data:application/json;base64")&&"undefined"!=typeof Buffer){const e=r.split(",")[1],i=JSON.parse(Buffer.from(e,"base64").toString("utf-8"));return a.C.parse({...i,id:n.O$.from(t).toString(),uri:r})}const s=r.replace("{id}",i.hexZeroPad(n.O$.from(t).toHexString(),32).slice(2));let o;try{o=await e.downloadJSON(s)}catch(a){const i=r.replace("{id}",n.O$.from(t).toString());try{o=await e.downloadJSON(i)}catch(e){console.warn(`failed to get token metadata: ${JSON.stringify({tokenId:t.toString(),tokenUri:r})} -- falling back to default metadata`),o=d}}return a.C.parse({...o,id:n.O$.from(t).toString(),uri:r})}async function l(t,r,i,l){let u;const g=(await e.e(5025).then(e.t.bind(e,25025,19))).default,h=new s.CH(t,g,r),[f,w]=await Promise.all([h.supportsInterface(o),h.supportsInterface(c)]);if(f){const a=(await Promise.resolve().then(e.t.bind(e,34161,19))).default,n=new s.CH(t,a,r);u=await n.tokenURI(i)}else{if(!w)throw Error("Contract must implement ERC 1155 or ERC 721.");{const a=(await Promise.resolve().then(e.t.bind(e,50266,19))).default,n=new s.CH(t,a,r);u=await n.uri(i)}}return u?p(i,u,l):a.C.parse({...d,id:n.O$.from(i).toString(),uri:""})}async function u(t,r){return"string"==typeof t?t:await r.upload(a.a.parse(t))}async function g(t,r,e,i){if(function(t){return void 0===t.find((t=>"string"!=typeof t))}(t))return t;if(function(t){return void 0===t.find((t=>"object"!=typeof t))}(t)){return await r.uploadBatch(t.map((t=>a.a.parse(t))),{rewriteFileNames:{fileStartNumber:e||0},onProgress:i?.onProgress})}throw new Error("NFT metadatas must all be of the same type (all URI or all NFTMetadataInput)")}function h(t){const r=t[0].substring(0,t[0].lastIndexOf("/"));for(let e=0;e<t.length;e++){const a=t[e].substring(0,t[e].lastIndexOf("/"));if(r!==a)throw new Error(`Can only create batches with the same base URI for every entry in the batch. Expected '${r}' but got '${a}'`)}return r.replace(/\/$/,"")+"/"}const f=100},91784:(t,r,e)=>{e.d(r,{c:()=>n});var a=e(52367),i=e(4254);function n(t){return(0,i.i)(t)?a.aZ:t}},12428:(t,r,e)=>{e.d(r,{C:()=>a});class a{constructor(t){this.contractWrapper=t}overrideNextTransaction(t){this.contractWrapper.withTransactionOverride(t)}}},99894:(t,r,e)=>{e.d(r,{C:()=>n});var a=e(31007),i=e(52367);class n{featureName=i.dn.name;constructor(t){this.contractWrapper=t}async get(){const[t,r]=await this.contractWrapper.read("getPlatformFeeInfo",[]);return i.bJ.parseAsync({platform_fee_recipient:t,platform_fee_basis_points:r})}set=(0,a.c)((async t=>{const r=await i.bJ.parseAsync(t);return a.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPlatformFeeInfo",args:[r.platform_fee_recipient,r.platform_fee_basis_points]})}))}},61866:(t,r,e)=>{e.r(r),e.d(r,{Marketplace:()=>b});var a=e(85472),i=e(74054),n=e(35179),s=e(72914),o=e(4254),c=e(52367),d=e(3273),p=e(31007),l=e(31406),u=e(12428),g=e(99894),h=e(83475),f=e(62914),w=e(22897),m=e(20787),y=e(80589),W=e(91784),v=e(61080),A=e(75640);let C=function(t){return t[t.Direct=0]="Direct",t[t.Auction=1]="Auction",t}({});class P{constructor(t,r){this.contractWrapper=t,this.storage=r}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.assetContract===a.d)throw new c.L(this.getAddress(),t.toString());if(r.listingType!==C.Direct)throw new c.W(this.getAddress(),t.toString(),"Auction","Direct");return await this.mapListing(r)}async getActiveOffer(t,r){await this.validateListing(i.O$.from(t)),(0,n.Z)(f.isAddress(r),"Address must be a valid address");const e=await this.contractWrapper.read("offers",[t,await(0,c.aP)(r)]);if(e.offeror!==a.d)return await(0,d.m)(this.contractWrapper.getProvider(),i.O$.from(t),e)}createListing=(0,p.c)((async t=>{(0,d.v)(t);const r=await(0,c.aP)(t.assetContractAddress),e=await(0,c.aP)(t.currencyContractAddress);await(0,d.h)(this.contractWrapper,this.getAddress(),r,t.tokenId,await this.contractWrapper.getSignerAddress());const a=await(0,v.n)(this.contractWrapper.getProvider(),t.buyoutPricePerToken,e);let n=Math.floor(t.startTimestamp.getTime()/1e3);const s=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;return n<s&&(n=s),p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:r,tokenId:t.tokenId,buyoutPricePerToken:a,currencyToAccept:(0,W.c)(e),listingType:C.Direct,quantityToList:t.quantity,reservePricePerToken:a,secondsUntilEndTime:t.listingDurationInSeconds,startTime:i.O$.from(n)}],parse:t=>({id:this.contractWrapper.parseLogs("ListingAdded",t?.logs)[0].args.listingId,receipt:t})})}));createListingsBatch=(0,p.c)((async t=>{const r=(await Promise.all(t.map((t=>this.createListing.prepare(t))))).map((t=>t.encode()));return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:t=>this.contractWrapper.parseLogs("ListingAdded",t?.logs).map((r=>({id:r.args.listingId,receipt:t})))})}));makeOffer=(0,p.c)((async(t,r,e,a,n)=>{if((0,o.i)(e))throw new Error("You must use the wrapped native token address when making an offer with a native token");const s=await(0,v.n)(this.contractWrapper.getProvider(),a,e);try{await this.getListing(t)}catch(r){throw console.error("Failed to get listing, err =",r),new Error(`Error getting the listing with id ${t}`)}const c=i.O$.from(r),d=i.O$.from(s).mul(c),l=await this.contractWrapper.getCallOverrides()||{};await(0,A.s)(this.contractWrapper,d,e,l);let u=w.Bz;return n&&(u=i.O$.from(Math.floor(n.getTime()/1e3))),p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[t,r,e,s,u],overrides:l})}));acceptOffer=(0,p.c)((async(t,r)=>{await this.validateListing(i.O$.from(t));const e=await(0,c.aP)(r),a=await this.contractWrapper.read("offers",[t,e]);return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"acceptOffer",args:[t,e,a.currency,a.pricePerToken]})}));buyoutListing=(0,p.c)((async(t,r,e)=>{const a=await this.validateListing(i.O$.from(t)),{valid:n,error:s}=await this.isStillValidListing(a,r);if(!n)throw new Error(`Listing ${t} is no longer valid. ${s}`);const o=e||await this.contractWrapper.getSignerAddress(),c=i.O$.from(r),d=i.O$.from(a.buyoutPrice).mul(c),l=await this.contractWrapper.getCallOverrides()||{};return await(0,A.s)(this.contractWrapper,d,a.currencyContractAddress,l),p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"buy",args:[t,o,c,a.currencyContractAddress,d],overrides:l})}));updateListing=(0,p.c)((async t=>p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[t.id,t.quantity,t.buyoutPrice,t.buyoutPrice,await(0,c.aP)(t.currencyContractAddress),t.startTimeInSeconds,t.secondsUntilEnd]})));cancelListing=(0,p.c)((async t=>p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"cancelDirectListing",args:[t]})));async validateListing(t){try{return await this.getListing(t)}catch(r){throw console.error(`Error getting the listing with id ${t}`),r}}async mapListing(t){return{assetContractAddress:t.assetContract,buyoutPrice:i.O$.from(t.buyoutPricePerToken),currencyContractAddress:t.currency,buyoutCurrencyValuePerToken:await(0,o.a)(this.contractWrapper.getProvider(),t.currency,t.buyoutPricePerToken),id:t.listingId.toString(),tokenId:t.tokenId,quantity:t.quantity,startTimeInSeconds:t.startTime,asset:await(0,s.c)(t.assetContract,this.contractWrapper.getProvider(),t.tokenId,this.storage),secondsUntilEnd:t.endTime,sellerAddress:t.tokenOwner,type:C.Direct}}async isStillValidListing(t,r){if(!await(0,d.i)(this.contractWrapper.getProvider(),this.getAddress(),t.assetContractAddress,t.tokenId,t.sellerAddress))return{valid:!1,error:`Token '${t.tokenId}' from contract '${t.assetContractAddress}' is not approved for transfer`};const a=this.contractWrapper.getProvider(),i=(await e.e(5025).then(e.t.bind(e,25025,19))).default,n=new m.CH(t.assetContractAddress,i,a),o=await n.supportsInterface(s.I),c=await n.supportsInterface(s.a);if(o){const r=(await Promise.resolve().then(e.t.bind(e,70332,19))).default,i=new m.CH(t.assetContractAddress,r,a);let n;try{n=await i.ownerOf(t.tokenId)}catch(t){}const s=n?.toLowerCase()===t.sellerAddress.toLowerCase();return{valid:s,error:s?void 0:`Seller is not the owner of Token '${t.tokenId}' from contract '${t.assetContractAddress} anymore'`}}if(c){const i=(await Promise.resolve().then(e.t.bind(e,8455,19))).default,n=new m.CH(t.assetContractAddress,i,a),s=(await n.balanceOf(t.sellerAddress,t.tokenId)).gte(r||t.quantity);return{valid:s,error:s?void 0:`Seller does not have enough balance of Token '${t.tokenId}' from contract '${t.assetContractAddress} to fulfill the listing`}}return{valid:!1,error:"Contract does not implement ERC 1155 or ERC 721."}}}class T{constructor(t,r){this.contractWrapper=t,this.storage=r,this.encoder=new o.C(t)}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.listingId.toString()!==t.toString())throw new c.L(this.getAddress(),t.toString());if(r.listingType!==C.Auction)throw new c.W(this.getAddress(),t.toString(),"Direct","Auction");return await this.mapListing(r)}async getWinningBid(t){await this.validateListing(i.O$.from(t));const r=await this.contractWrapper.read("winningBid",[t]);if(r.offeror!==a.d)return await(0,d.m)(this.contractWrapper.getProvider(),i.O$.from(t),r)}async getWinner(t){const r=await this.validateListing(i.O$.from(t)),e=await this.contractWrapper.read("winningBid",[t]),n=i.O$.from(Math.floor(Date.now()/1e3)),s=i.O$.from(r.endTimeInEpochSeconds);if(n.gt(s)&&e.offeror!==a.d)return e.offeror;const o=new l.a(this.contractWrapper),c=(await o.getEvents("AuctionClosed")).find((r=>r.data.listingId.eq(i.O$.from(t))));if(!c)throw new Error(`Could not find auction with listingId ${t} in closed auctions`);return c.data.winningBidder}createListing=(0,p.c)((async t=>{(0,d.v)(t);const r=await(0,c.aP)(t.assetContractAddress),e=await(0,c.aP)(t.currencyContractAddress);await(0,d.h)(this.contractWrapper,this.getAddress(),r,t.tokenId,await this.contractWrapper.getSignerAddress());const a=await(0,v.n)(this.contractWrapper.getProvider(),t.buyoutPricePerToken,e),n=await(0,v.n)(this.contractWrapper.getProvider(),t.reservePricePerToken,e);let s=Math.floor(t.startTimestamp.getTime()/1e3);const o=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;return s<o&&(s=o),p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:r,tokenId:t.tokenId,buyoutPricePerToken:a,currencyToAccept:(0,W.c)(e),listingType:C.Auction,quantityToList:t.quantity,reservePricePerToken:n,secondsUntilEndTime:t.listingDurationInSeconds,startTime:i.O$.from(s)}],parse:t=>({id:this.contractWrapper.parseLogs("ListingAdded",t?.logs)[0].args.listingId,receipt:t})})}));createListingsBatch=(0,p.c)((async t=>{const r=(await Promise.all(t.map((t=>this.createListing.prepare(t))))).map((t=>t.encode()));return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:t=>this.contractWrapper.parseLogs("ListingAdded",t?.logs).map((r=>({id:r.args.listingId,receipt:t})))})}));buyoutListing=(0,p.c)((async t=>{const r=await this.validateListing(i.O$.from(t)),e=await(0,o.f)(this.contractWrapper.getProvider(),r.currencyContractAddress);return this.makeBid.prepare(t,y.formatUnits(r.buyoutPrice,e.decimals))}));makeBid=(0,p.c)((async(t,r)=>{const e=await this.validateListing(i.O$.from(t)),a=await(0,v.n)(this.contractWrapper.getProvider(),r,e.currencyContractAddress);if(a.eq(i.O$.from(0)))throw new Error("Cannot make a bid with 0 value");const s=await this.contractWrapper.read("bidBufferBps",[]),o=await this.getWinningBid(t);if(o){const t=(0,d.a)(o.pricePerToken,a,s);(0,n.Z)(t,"Bid price is too low based on the current winning bid and the bid buffer")}else{const t=a,r=i.O$.from(e.reservePrice);(0,n.Z)(t.gte(r),"Bid price is too low based on reserve price")}const c=i.O$.from(e.quantity),l=a.mul(c),u=await this.contractWrapper.getCallOverrides()||{};return await(0,A.s)(this.contractWrapper,l,e.currencyContractAddress,u),p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[t,e.quantity,e.currencyContractAddress,a,w.Bz],overrides:u})}));cancelListing=(0,p.c)((async t=>{const r=await this.validateListing(i.O$.from(t)),e=i.O$.from(Math.floor(Date.now()/1e3)),n=i.O$.from(r.startTimeInEpochSeconds),s=await this.contractWrapper.read("winningBid",[t]);if(e.gt(n)&&s.offeror!==a.d)throw new c.t(t.toString());return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[i.O$.from(t),await this.contractWrapper.getSignerAddress()]})}));closeListing=(0,p.c)((async(t,r)=>{r||(r=await this.contractWrapper.getSignerAddress());const e=await this.validateListing(i.O$.from(t));try{return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[i.O$.from(t),r]})}catch(r){throw r.message.includes("cannot close auction before it has ended")?new c.w(t.toString(),e.endTimeInEpochSeconds.toString()):r}}));executeSale=(0,p.c)((async t=>{const r=await this.validateListing(i.O$.from(t));try{const e=await this.getWinningBid(t);(0,n.Z)(e,"No winning bid found");const a=this.encoder.encode("closeAuction",[t,r.sellerAddress]),i=this.encoder.encode("closeAuction",[t,e.buyerAddress]);return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[a,i]})}catch(e){throw e.message.includes("cannot close auction before it has ended")?new c.w(t.toString(),r.endTimeInEpochSeconds.toString()):e}}));updateListing=(0,p.c)((async t=>p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[t.id,t.quantity,t.reservePrice,t.buyoutPrice,t.currencyContractAddress,t.startTimeInEpochSeconds,t.endTimeInEpochSeconds]})));async getBidBufferBps(){return this.contractWrapper.read("bidBufferBps",[])}async getMinimumNextBid(t){const[r,e,a]=await Promise.all([this.getBidBufferBps(),this.getWinningBid(t),this.validateListing(i.O$.from(t))]),n=e?e.currencyValue.value:a.reservePrice,s=n.add(n.mul(r).div(1e4));return(0,o.a)(this.contractWrapper.getProvider(),a.currencyContractAddress,s)}async validateListing(t){try{return await this.getListing(t)}catch(r){throw console.error(`Error getting the listing with id ${t}`),r}}async mapListing(t){return{assetContractAddress:t.assetContract,buyoutPrice:i.O$.from(t.buyoutPricePerToken),currencyContractAddress:t.currency,buyoutCurrencyValuePerToken:await(0,o.a)(this.contractWrapper.getProvider(),t.currency,t.buyoutPricePerToken),id:t.listingId.toString(),tokenId:t.tokenId,quantity:t.quantity,startTimeInEpochSeconds:t.startTime,asset:await(0,s.c)(t.assetContract,this.contractWrapper.getProvider(),t.tokenId,this.storage),reservePriceCurrencyValuePerToken:await(0,o.a)(this.contractWrapper.getProvider(),t.currency,t.reservePricePerToken),reservePrice:i.O$.from(t.reservePricePerToken),endTimeInEpochSeconds:t.endTime,sellerAddress:t.tokenOwner,type:C.Auction}}}e(41829),e(72993),e(71770);class b{static contractRoles=c.dA;get chainId(){return this._chainId}constructor(t,r,e){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,n=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new c.cu(t,r,i,a,e);this._chainId=n,this.abi=c.bn.parse(i||[]),this.contractWrapper=s,this.storage=e,this.metadata=new l.C(this.contractWrapper,c.c1,this.storage),this.app=new l.b(this.contractWrapper,this.metadata,this.storage),this.roles=new h.C(this.contractWrapper,b.contractRoles),this.encoder=new o.C(this.contractWrapper),this.estimator=new l.G(this.contractWrapper),this.direct=new P(this.contractWrapper,this.storage),this.auction=new T(this.contractWrapper,this.storage),this.events=new l.a(this.contractWrapper),this.platformFees=new g.C(this.contractWrapper),this.interceptor=new u.C(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.assetContract===a.d)throw new c.L(this.getAddress(),t.toString());switch(r.listingType){case C.Auction:return await this.auction.mapListing(r);case C.Direct:return await this.direct.mapListing(r);default:throw new Error(`Unknown listing type: ${r.listingType}`)}}async getActiveListings(t){const r=await this.getAllListingsNoFilter(!0),e=this.applyFilter(r,t),a=i.O$.from(Math.floor(Date.now()/1e3));return e.filter((t=>t.type===C.Auction&&i.O$.from(t.endTimeInEpochSeconds).gt(a)&&i.O$.from(t.startTimeInEpochSeconds).lte(a)||t.type===C.Direct&&i.O$.from(t.quantity).gt(0)))}async getAllListings(t){const r=await this.getAllListingsNoFilter(!1);return this.applyFilter(r,t)}getAll=this.getAllListings;async getTotalCount(){return await this.contractWrapper.read("totalListings",[])}async isRestrictedToListerRoleOnly(){return!await this.contractWrapper.read("hasRole",[(0,c.H)("lister"),a.d])}async getBidBufferBps(){return this.contractWrapper.read("bidBufferBps",[])}async getTimeBufferInSeconds(){return this.contractWrapper.read("timeBuffer",[])}async getOffers(t){const r=await this.events.getEvents("NewOffer",{order:"desc",filters:{listingId:t}});return await Promise.all(r.map((r=>(0,d.m)(this.contractWrapper.getProvider(),i.O$.from(t),{quantityWanted:r.data.quantityWanted,pricePerToken:r.data.quantityWanted.gt(0)?r.data.totalOfferAmount.div(r.data.quantityWanted):r.data.totalOfferAmount,currency:r.data.currency,offeror:r.data.offeror}))))}buyoutListing=(0,p.c)((async(t,r,e)=>{const a=await this.contractWrapper.read("listings",[t]);if(a.listingId.toString()!==t.toString())throw new c.L(this.getAddress(),t.toString());switch(a.listingType){case C.Direct:return(0,n.Z)(void 0!==r,"quantityDesired is required when buying out a direct listing"),await this.direct.buyoutListing.prepare(t,r,e);case C.Auction:return await this.auction.buyoutListing.prepare(t);default:throw Error(`Unknown listing type: ${a.listingType}`)}}));makeOffer=(0,p.c)((async(t,r,e)=>{const a=await this.contractWrapper.read("listings",[t]);if(a.listingId.toString()!==t.toString())throw new c.L(this.getAddress(),t.toString());const i=await this.contractWrapper.getChainID();switch(a.listingType){case C.Direct:return(0,n.Z)(e,"quantity is required when making an offer on a direct listing"),await this.direct.makeOffer.prepare(t,e,(0,o.i)(a.currency)?c.a_[i].wrapped.address:a.currency,r);case C.Auction:return await this.auction.makeBid.prepare(t,r);default:throw Error(`Unknown listing type: ${a.listingType}`)}}));setBidBufferBps=(0,p.c)((async t=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const r=await this.getTimeBufferInSeconds();return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[r,i.O$.from(t)]})}));setTimeBufferInSeconds=(0,p.c)((async t=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const r=await this.getBidBufferBps();return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[i.O$.from(t),r]})}));allowListingFromSpecificAssetOnly=(0,p.c)((async t=>{const r=[];return(await this.roles.get("asset")).includes(a.d)&&r.push(this.encoder.encode("revokeRole",[(0,c.H)("asset"),a.d])),r.push(this.encoder.encode("grantRole",[(0,c.H)("asset"),t])),p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r]})}));allowListingFromAnyAsset=(0,p.c)((async()=>{const t=[],r=await this.roles.get("asset");for(const e in r)t.push(this.encoder.encode("revokeRole",[(0,c.H)("asset"),e]));return t.push(this.encoder.encode("grantRole",[(0,c.H)("asset"),a.d])),p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[t]})}));async getAllListingsNoFilter(t){return(await Promise.all(Array.from(Array((await this.contractWrapper.read("totalListings",[])).toNumber()).keys()).map((async r=>{let e;try{e=await this.getListing(r)}catch(t){return t instanceof c.L?void 0:void console.warn(`Failed to get listing ${r}' - skipping. Try 'marketplace.getListing(${r})' to get the underlying error.`)}if(e.type===C.Auction)return e;if(t){const{valid:t}=await this.direct.isStillValidListing(e);if(!t)return}return e})))).filter((t=>void 0!==t))}applyFilter(t,r){let e=[...t];const a=i.O$.from(r?.start||0).toNumber(),n=i.O$.from(r?.count||s.D).toNumber();return r&&(r.seller&&(e=e.filter((t=>t.sellerAddress.toString().toLowerCase()===r?.seller?.toString().toLowerCase()))),r.tokenContract&&(e=e.filter((t=>t.assetContractAddress.toString().toLowerCase()===r?.tokenContract?.toString().toLowerCase()))),void 0!==r.tokenId&&(e=e.filter((t=>t.tokenId.toString()===r?.tokenId?.toString()))),e=e.filter(((t,r)=>r>=a)),e=e.slice(0,n)),e}async prepare(t,r,e){return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}},3273:(t,r,e)=>{e.d(r,{a:()=>g,g:()=>h,h:()=>p,i:()=>d,m:()=>u,v:()=>l});var a=e(20787),i=e(74054),n=e(35179),s=e(72914),o=e(52367),c=e(4254);async function d(t,r,i,n,o){try{const c=(await e.e(5025).then(e.t.bind(e,25025,19))).default,d=new a.CH(i,c,t),[p,l]=await Promise.all([d.supportsInterface(s.I),d.supportsInterface(s.a)]);if(p){const s=(await Promise.resolve().then(e.t.bind(e,70332,19))).default,c=new a.CH(i,s,t);if(await c.isApprovedForAll(o,r))return!0;let d;try{d=await c.getApproved(n)}catch(t){}return d?.toLowerCase()===r.toLowerCase()}if(l){const n=(await Promise.resolve().then(e.t.bind(e,8455,19))).default,s=new a.CH(i,n,t);return await s.isApprovedForAll(o,r)}return console.error("Contract does not implement ERC 1155 or ERC 721."),!1}catch(t){return console.error("Failed to check if token is approved",t),!1}}async function p(t,r,a,i,n){const c=(await e.e(5025).then(e.t.bind(e,25025,19))).default,d=new o.cu(t.getSignerOrProvider(),a,c,t.options,t.storage),[p,l]=await Promise.all([d.read("supportsInterface",[s.I]),d.read("supportsInterface",[s.a])]);if(p){const s=(await Promise.resolve().then(e.t.bind(e,70332,19))).default,c=new o.cu(t.getSignerOrProvider(),a,s,t.options,t.storage);if(!await c.read("isApprovedForAll",[n,r])){(await c.read("getApproved",[i])).toLowerCase()===r.toLowerCase()||await c.sendTransaction("setApprovalForAll",[r,!0])}}else{if(!l)throw Error("Contract must implement ERC 1155 or ERC 721.");{const i=(await Promise.resolve().then(e.t.bind(e,8455,19))).default,s=new o.cu(t.getSignerOrProvider(),a,i,t.options,t.storage);await s.read("isApprovedForAll",[n,r])||await s.sendTransaction("setApprovalForAll",[r,!0])}}}function l(t){if((0,n.Z)(void 0!==t.assetContractAddress&&null!==t.assetContractAddress,"Asset contract address is required"),(0,n.Z)(void 0!==t.buyoutPricePerToken&&null!==t.buyoutPricePerToken,"Buyout price is required"),(0,n.Z)(void 0!==t.listingDurationInSeconds&&null!==t.listingDurationInSeconds,"Listing duration is required"),(0,n.Z)(void 0!==t.startTimestamp&&null!==t.startTimestamp,"Start time is required"),(0,n.Z)(void 0!==t.tokenId&&null!==t.tokenId,"Token ID is required"),(0,n.Z)(void 0!==t.quantity&&null!==t.quantity,"Quantity is required"),"NewAuctionListing"===t.type)(0,n.Z)(void 0!==t.reservePricePerToken&&null!==t.reservePricePerToken,"Reserve price is required")}async function u(t,r,e){return{quantity:e.quantityDesired,pricePerToken:e.pricePerToken,currencyContractAddress:e.currency,buyerAddress:e.offeror,quantityDesired:e.quantityWanted,currencyValue:await(0,c.a)(t,e.currency,e.quantityWanted.mul(e.pricePerToken)),listingId:r}}function g(t,r,e){if(e=i.O$.from(e),t=i.O$.from(t),r=i.O$.from(r),t.eq(i.O$.from(0)))return!1;return r.sub(t).mul(o.dy).div(t).gte(e)}async function h(t,r,e){const a=[];for(;r-t>s.D;)a.push(e(t,t+s.D-1)),t+=s.D;return a.push(e(t,r-1)),await Promise.all(a)}},75640:(t,r,e)=>{e.d(r,{B:()=>c,C:()=>l,N:()=>p,a:()=>d,s:()=>u});var a=e(52367),i=e(1604),n=e(4254);const s=(()=>i.z.object({}).catchall(i.z.union([a.cA,i.z.unknown()])))(),o=(()=>i.z.union([i.z.array(s),s]).optional().nullable())(),c=(()=>i.z.object({name:i.z.union([i.z.string(),i.z.number()]).optional().nullable(),description:i.z.string().nullable().optional().nullable(),image:a.cB.nullable().optional(),animation_url:a.cB.optional().nullable()}))(),d=(()=>c.extend({external_url:a.cB.nullable().optional(),background_color:a.cC.optional().nullable(),properties:o,attributes:o}).catchall(i.z.union([a.cA,i.z.unknown()])))(),p=(()=>i.z.union([d,i.z.string()]))(),l=(()=>d.extend({id:i.z.string(),uri:i.z.string(),image:i.z.string().nullable().optional(),external_url:i.z.string().nullable().optional(),animation_url:i.z.string().nullable().optional()}))();async function u(t,r,i,s){if(!(0,n.i)(i)){const n=(await Promise.resolve().then(e.t.bind(e,49242,19))).default,o=t.getSigner(),c=t.getProvider(),d=new a.cu(o||c,i,n,t.options,t.storage),p=await t.getSignerAddress(),l=t.address;return(await d.read("allowance",[p,l])).lt(r)&&await d.sendTransaction("approve",[l,r]),s}s.value=r}}}]);